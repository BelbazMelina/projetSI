{% extends 'base.html.twig' %}

{% block title %}Décryptage des formules{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        body {
            background-color: #f0f5f0;
            font-family: 'Arial', sans-serif;
            padding: 20px;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .container {
            max-width: 800px;
            width: 90%;
            margin: 20px auto;
            padding: 30px;
            background: white;
            border-radius: 20px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        h1 {
            color: #2c5282;
            font-size: 2.2rem;
            margin-bottom: 30px;
            text-align: center;
            font-weight: 600;
        }


        .timer {
            background: #f8fafc;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            padding: 15px 25px;
            font-size: 1.8rem;
            color: #2c5282;
            display: inline-block;
            margin: 20px auto;
            font-weight: 600;
        }


        .card {
            background: #ffffff;
            border: 1px solid #e2e8f0;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 25px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .card-title {
            color: #2c5282;
            font-size: 1.4rem;
            margin-bottom: 20px;
            font-weight: 600;
        }

        .formula-box {
            background: #f8fafc;
            border: 1px solid #e2e8f0;
            padding: 15px;
            border-radius: 10px;
            margin: 15px 0;
        }

        .formula-box h4 {
            color: #2d3748;
            margin: 0;
            font-size: 1.2rem;
        }

        .img-fluid {
            background-color: #ffffff;
            padding: 10px;
            border: 1px solid #e2e8f0;
            border-radius: 10px;
            max-height: 200px;
            margin: 15px auto;
            display: block;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        }

        #answer-zone {
            background: #f8fafc;
            padding: 25px;
            border-radius: 15px;
            margin-top: 30px;
            border: 1px solid #e2e8f0;
        }

        #final-code {
            background: #ffffff;
            border: 2px solid #3182ce;
            border-radius: 8px;
            padding: 10px;
            font-size: 1.2rem;
            text-align: center;
            color: #2d3748;
            max-width: 200px;
            margin: 15px auto;
            transition: border-color 0.2s ease;
        }

        #final-code:focus {
            outline: none;
            border-color: #2c5282;
            box-shadow: 0 0 0 3px rgba(49, 130, 206, 0.1);
        }

        label {
            color: #2d3748;
            font-weight: 600;
            font-size: 1.1rem;
        }

        .btn-primary {
            background-color: #3182ce;
            border: none;
            padding: 12px 30px;
            font-size: 1.1rem;
            border-radius: 10px;
            color: white;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .btn-primary:hover {
            background-color: #2c5282;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(49, 130, 206, 0.2);
        }

        .timer.warning {
            color: #e53e3e;
            border-color: #e53e3e;
        }


        @media (max-width: 480px) {
            .container {
                padding: 15px;
            }

            .timer {
                font-size: 1.5rem;
                padding: 10px 20px;
            }

            .card {
                padding: 15px;
            }

            .card-title {
                font-size: 1.2rem;
            }

            #final-code {
                width: 80%;
            }
        }
    </style>
{% endblock %}


{% block body %}
    <div class="container">
        <h1 class="text-center my-4">Trouvez le code secret</h1>

        <div id="game-container">
            <div class="timer mb-4 text-center">
                Temps restant : <span id="global-timer">5:00</span>
            </div>
            <div id="formules-container">
                {% for molecule in molecules %}
                    <div class="formule" data-index="{{ loop.index0 }}" style="display: none;">
                        <div class="card h-100">
                            <div class="card-body text-center">
                                <h3 class="card-title">Formule {{ loop.index }}</h3>
                                <div class="formula-box mb-3">
                                    <h4>{{ molecule.formuleChimique }}</h4>
                                    <h3>{{ molecule.image|replace({'.png': ''}) }}</h3>
                                </div>
                                {% if molecule.image %}
                                    <img src="{{ asset('images/molecules/' ~ molecule.image) }}"
                                         alt="Molécule {{ molecule.formuleChimique }}"
                                         class="img-fluid mb-3"
                                         style="max-height: 200px; width: auto;">
                                {% endif %}

                                <i><p class="card-text">{{ molecule.information }}</p></i>

                            </div>
                        </div>
                    </div>
                {%  endfor %}
            </div>


            <div id="answer-zone" class="text-center mt-4">
                <div class="form-group">
                    <label for="final-code" class="mb-2">
                        <strong>Entrez le code secret :</strong>
                    </label>
                    <input type="text" id="final-code" name="code" class="form-control mx-auto" style="max-width: 200px;" required>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Valider</button>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const globalTimerElement = document.getElementById('global-timer');
            const validateButton = document.querySelector('button[type="submit"]');
            const finalCodeInput = document.getElementById('final-code');
            const formules = document.querySelectorAll('.formule');

            let globalTimeRemaining = {{ timeRemaining }};
            let formulaTimeInterval = 1;
            let currentFormulaIndex = 0;

            function showNextFormula() {
                if (currentFormulaIndex < formules.length) {
                    formules[currentFormulaIndex].style.display = 'block';
                    currentFormulaIndex++;
                    if (currentFormulaIndex < formules.length) {
                        setTimeout(showNextFormula, formulaTimeInterval * 1000);
                    }
                }
            }


            showNextFormula();


            const style = document.createElement('style');
            style.textContent = `
                @keyframes pulse {
                    0% { transform: scale(1); }
                    50% { transform: scale(1.1); }
                    100% { transform: scale(1); }
                }
            `;
            document.head.appendChild(style);


            const globalTimer = setInterval(() => {
                if (globalTimeRemaining <= 0) {
                    clearInterval(globalTimer);
                    window.location.href = "{{ path('resultat', {
                        'success': false,
                        'timeout': true,
                        'parties_jouees': parties_jouees|default(0),
                        'score': 0
                    }) }}";
                    return;
                }


                if (globalTimeRemaining % 5 === 0) {
                    fetch('{{ path('validate_answer') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ checkTime: true })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.status === 'timeout') {
                                window.location.href = data.redirectUrl;
                            }
                        });
                }


                const minutes = Math.floor(globalTimeRemaining / 60);
                const seconds = globalTimeRemaining % 60;
                globalTimerElement.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;


                if (globalTimeRemaining <= 30) {
                    globalTimerElement.style.color = 'red';
                    globalTimerElement.style.animation = 'pulse 1s infinite';
                }

                globalTimeRemaining--;
            }, 1000);


            validateButton.addEventListener('click', function(event) {
                event.preventDefault();


                if (globalTimeRemaining <= 0) {
                    window.location.href = "{{ path('resultat', {
                        'success': false,
                        'timeout': true,
                        'parties_jouees': parties_jouees|default(0),
                        'score': 0
                    }) }}";
                    return;
                }

                const code = finalCodeInput.value.trim().toUpperCase();

                if (code === '') {
                    alert('Veuillez entrer un code');
                    return;
                }

                fetch('{{ path('validate_answer') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ code: code, timeRemaining: globalTimeRemaining })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.redirectUrl) {
                            window.location.href = data.redirectUrl;
                        } else {
                            alert(data.message || 'Une erreur est survenue.');
                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors de la validation :', error);
                    });
            });


            finalCodeInput.addEventListener('keypress', function(event) {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    validateButton.click();
                }
            });
        });
    </script>
{% endblock %}